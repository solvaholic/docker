name: Docker

on:
  push:
    # Only run this workflow if */Dockerfile in master branch changed.
    branches:
      - master
    paths:
      - '*/Dockerfile'

jobs:
  # Build and push any Dockerfile changed in this push.
  buildandpush:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '2'

      - name: List changed Dockerfiles
        run: |
          git diff --name-only ${{ github.event.before }} \
          ${{ github.event.after }} | \
          sed -n -e "/\/Dockerfile$/p" > _files

      - name: Build image(s)
        run: |
          echo "::debug::_files is ..." && cat _files
          : > _images
          cat _files | while read -r _thisfile; do
            _appname="${_thisfile%%/*}" _filename="${_thisfile##*/}"
            echo "::debug::_thisfile, _appname are ..." && \
            echo "${_thisfile} ${_appname}"
            if [ -f "${_thisfile}" ]; then
              _tag=${{ github.repository }}/"${_appname}:"latest
              cat "${_thisfile}" | docker build -t "${_tag}" -
              echo "${_tag}" >> _images
            fi
          done
          echo "::set-env name=_images::${_myImages}"

      - name: Push image(s) to docker.pkg.github.com
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
          docker login docker.pkg.github.com \
          -u ${{ github.actor }} --password-stdin
          echo "::debug::_images is ..." && cat _images
          cat _images | while read -r _thisimage; do
            # For GitHub's registry, prepend docker.pkg.github.com
            _mytag="docker.pkg.github.com/${_thisimage}"
            docker tag "${_thisimage}" "${_mytag}"
            echo "::debug::Pushing ${_mytag}"
            docker push "${_mytag}"
          done

      - name: Push image(s) to Docker hub
        run: |
          echo "${{ secrets.dockerhub_token }}" | \
          docker login -u ${{ github.actor }} --password-stdin
          echo "::debug::_images is ..." && cat _images
          cat _images | while read -r _thisimage; do
            # For Docker hub, use only the owner and topic names.
            _mytag="${_thisimage%%/*}/${_thisimage##*/}"
            docker tag "${_thisimage}" "${_mytag}"
            echo "::debug::Pushing ${_mytag}"
            docker push "${_mytag}"
          done
